{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","Vaccine","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredVaccine","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAAK,OACjB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BAClB,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,YCFjBC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBK,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIX,UAAU,SACVY,KAAK,SACDF,YAAaA,EACbG,SAAYF,MCkCTG,E,kDApCb,aAAc,IAAD,8BACX,gBAcJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACbjB,QAAQ,GAERc,YAAa,IANF,E,qDAUb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEb,QAAQsB,S,oBAKzC,WACE,MAAiCC,KAAKN,MAA9BjB,EAAR,EAAQA,QAASc,EAAjB,EAAiBA,YACXU,EAAkBxB,EAAQyB,QAAO,SAAAzB,GAAO,OAC5CA,EAAQE,KAAKwB,cAAcC,SAASb,EAAYc,wBAElD,OACM,sBAAK/B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUR,QAASwB,W,GA/BXK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f9787658.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props => (\n        <div className='card-container'>\n        <img alt=\"monster\" src= {`https://robohash.org/${props.Vaccine.id}?set=set2&size=180x180`}/>\n            <h2> {props.Vaccine.name} </h2>\n            <p>{props.Vaccine.email}</p>\n        </div>\n)","import React from 'react';\n\nimport { Card } from '../card-list/card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n    <div className='card-list'>\n            {\n            props.Vaccine.map(Vaccine => (\n            <Card key={Vaccine.id} Vaccine={Vaccine}/>\n            ))} \n    </div>\n);","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) =>(\n    <input \n        className='search'\n        type='search' \n            placeholder={placeholder}\n            onChange= { handleChange}\n          />\n);","import React, { Component }  from 'react';\nimport { CardList, } from './components/card-list/card-list.component';\nimport './App.css';\nimport {SearchBox} from './components/search-box/search-box.component';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n    Vaccine:[\n    ],\n    searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ Vaccine:users }));\n  }\nhandleChange = e => {\n  this.setState({ searchField: e.target.value});\n}\n  render(){\n    const { Vaccine, searchField } = this.state;\n    const filteredVaccine = Vaccine.filter(Vaccine =>\n      Vaccine.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n    return(\n          <div className=\"App\">\n          <h1>Vaccine Monsters</h1>\n          <SearchBox\n            placeholder='search Vaccine'\n            handleChange={this.handleChange}\n          />\n          <CardList Vaccine={filteredVaccine}/>\n          </div>\n        );\n      }\n    }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}